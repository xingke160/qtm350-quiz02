[
  {
    "objectID": "life-population.html",
    "href": "life-population.html",
    "title": "LifeExp vs Population",
    "section": "",
    "text": "Life Expectancy vs Population\nThis page explores the relationship between life expectancy and population (in millions) across different continents.\n\nlibrary(ggplot2)\nlibrary(readr)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n# Load dataset using the new file path\ngap_data &lt;- read_csv(\"D:/qtm350-quiz02/gapminder.csv\")\n\nRows: 1704 Columns: 6\n\n\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): country, continent\ndbl (4): year, life_expectancy, population_millions, gdp_per_capita\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n# Convert columns to proper types\ngap_data &lt;- gap_data %&gt;%\n  mutate(\n    population_millions = as.numeric(population_millions),\n    life_expectancy = as.numeric(life_expectancy)\n  )\n\n# Create a scatter plot of life expectancy vs population\nggplot(gap_data, aes(x = population_millions, y = life_expectancy, color = continent)) +\n  geom_point(size = 2, alpha = 0.7) +\n  labs(\n    x = \"Population (millions)\",\n    y = \"Life Expectancy\",\n    color = \"Continent\"\n  ) +\n  theme_light()"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "New Gapminder Analysis",
    "section": "",
    "text": "Welcome to the Gapminder Analysis Website\nThis website presents a new analysis of the Gapminder dataset, which covers 142 countries from 1952 to 2007. Explore the data through the following pages:\n\nLifeExp vs GDP \nLifeExp vs Population \nCountry Trends"
  },
  {
    "objectID": "country.html",
    "href": "country.html",
    "title": "Country Trends",
    "section": "",
    "text": "Country Trends Analysis\nThis page analyzes trends in life expectancy, GDP per capita, and population for a specific country. In this example, we focus on China.\n\nlibrary(ggplot2)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(readr)\nlibrary(gridExtra)  # For arranging multiple plots\n\n\nAttaching package: 'gridExtra'\n\n\nThe following object is masked from 'package:dplyr':\n\n    combine\n\n# Read the dataset using the new file path\ndata &lt;- read_csv(\"D:/qtm350-quiz02/gapminder.csv\")\n\nRows: 1704 Columns: 6\n\n\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): country, continent\ndbl (4): year, life_expectancy, population_millions, gdp_per_capita\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n# Ensure proper data types\ndata &lt;- data %&gt;% mutate(\n  year = as.integer(year),\n  life_expectancy = as.numeric(life_expectancy),\n  gdp_per_capita = as.numeric(gdp_per_capita),\n  population_millions = as.numeric(population_millions)\n)\n\n# Filter data for China\nchina_data &lt;- data %&gt;% filter(country == \"China\")\n\n# Plot 1: Life Expectancy Trend\nplot1 &lt;- ggplot(china_data, aes(x = year, y = life_expectancy)) +\n  geom_line(color = \"navy\", size = 1) +\n  labs(title = \"Life Expectancy Trend\", x = \"Year\", y = \"Life Expectancy\") +\n  theme_minimal()\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n# Plot 2: GDP per Capita Trend\nplot2 &lt;- ggplot(china_data, aes(x = year, y = gdp_per_capita)) +\n  geom_line(color = \"darkorange\", size = 1) +\n  labs(title = \"GDP per Capita Trend\", x = \"Year\", y = \"GDP per Capita\") +\n  theme_minimal()\n\n# Plot 3: Population Trend\nplot3 &lt;- ggplot(china_data, aes(x = year, y = population_millions)) +\n  geom_line(color = \"forestgreen\", size = 1) +\n  labs(title = \"Population Trend\", x = \"Year\", y = \"Population (millions)\") +\n  theme_minimal()\n\n# Arrange the three plots vertically\ngrid.arrange(plot1, plot2, plot3, ncol = 1)"
  },
  {
    "objectID": "create-dataset.html",
    "href": "create-dataset.html",
    "title": "Create the Gapminder dataset",
    "section": "",
    "text": "# Import necessary libraries\nimport pandas as pd\nfrom gapminder import gapminder\n\n# Rename 'lifeExp' to 'life_expectancy' and 'gdpPercap' to 'gdp_per_capita'\ngapminder = gapminder.rename(columns={'lifeExp': 'life_expectancy',\n                                      'pop': 'population_millions', \n                                      'gdpPercap': 'gdp_per_capita'})\n\n# Convert population to millions\ngapminder['population_millions'] = gapminder['population_millions'] / 1_000_000\n\n# Create a new pandas DataFrame from the modified gapminder data\ngapminder_df = pd.DataFrame(gapminder)\n\n# Save the DataFrame as a CSV file\ngapminder_df.to_csv('gapminder.csv', index=False)\n\n# Print the first 3 rows of the DataFrame\nprint(gapminder_df.head(3))\n\n       country continent  year  life_expectancy  population_millions  \\\n0  Afghanistan      Asia  1952           28.801             8.425333   \n1  Afghanistan      Asia  1957           30.332             9.240934   \n2  Afghanistan      Asia  1962           31.997            10.267083   \n\n   gdp_per_capita  \n0      779.445314  \n1      820.853030  \n2      853.100710"
  },
  {
    "objectID": "life-gdp.html",
    "href": "life-gdp.html",
    "title": "LifeExp vs GDP",
    "section": "",
    "text": "Life Expectancy vs GDP per Capita\nThis page examines the relationship between life expectancy and GDP per capita. The scatter plot below applies a logarithmic scale to the x-axis to better display the data.\n\n# Load necessary libraries\nlibrary(ggplot2)\nlibrary(readr)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n# Read the Gapminder dataset using the new file path\ngapminder_data &lt;- read_csv(\"D:/qtm350-quiz02/gapminder.csv\")\n\nRows: 1704 Columns: 6\n\n\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): country, continent\ndbl (4): year, life_expectancy, population_millions, gdp_per_capita\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n# Ensure proper data types\ngapminder_data &lt;- gapminder_data %&gt;%\n  mutate(\n    year = as.integer(year),\n    life_expectancy = as.numeric(life_expectancy),\n    gdp_per_capita = as.numeric(gdp_per_capita)\n  )\n\n# Create a scatter plot with a log scale on the x-axis\nggplot(gapminder_data, aes(x = gdp_per_capita, y = life_expectancy, color = factor(year))) +\n  geom_point(size = 2) +\n  scale_x_log10() +\n  labs(\n    x = \"GDP per Capita (log scale)\",\n    y = \"Life Expectancy\",\n    color = \"Year\"\n  ) +\n  theme_bw()"
  }
]